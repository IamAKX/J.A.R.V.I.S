/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Akash.ArtificialIntelligence;

import java.io.File;
import edu.cmu.sphinx.frontend.util.Microphone;
import edu.cmu.sphinx.recognizer.Recognizer;
import edu.cmu.sphinx.result.Result;
import edu.cmu.sphinx.util.props.ConfigurationManager;
import edu.cmu.sphinx.util.props.PropertyException;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import com.sun.speech.freetts.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.speech.recognition.ResultToken;
/**
 *
 * @author Sonu
 */
public class HelloWorld extends javax.swing.JFrame {
     private Object tts;
     private static final String VOICENAME="kevin16";
    /**
     * Creates new form MainInterface
     */
    public HelloWorld() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(404, 720));
        setMinimumSize(new java.awt.Dimension(404, 720));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(404, 720));
        setResizable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Akash/ArtificialIntelligence/Images/jarvisBG_1.gif"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(404, 720));
        jLabel1.setMinimumSize(new java.awt.Dimension(404, 720));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HelloWorld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HelloWorld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HelloWorld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HelloWorld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                
                new HelloWorld().setVisible(true);
                
                    File f = new File("C:\\JARVIS\\Database");
                    if (f.exists() && f.isDirectory()) {
                        System.out.print("Yes");
                    }
                    else
                    {   boolean flag=false;
                        File createF=new File("C://JARVIS//Database");
                        try {
                             flag = createF.mkdirs();
                            } catch (SecurityException Se) {
                            System.out.println("Error while creating directory in Java:" + Se);
                        }
                        if (flag)
                            System.out.println("Directory created successfully");
                        else
                            System.out.println("Directory was not created successfully");
                        

                    }
                
            }
        });
        speech(args);
    }
    
    //***************Yaha se speech wala part hai***********************************
    
    
    static int i=1;
	static String resultText;
    public static void speech(String[] args) {
        try {
            URL url;
           if (args.length > 0) {
               url = new File(args[0]).toURI().toURL();
            } else {
                url = HelloWorld.class.getResource("helloworld.config.xml");
            }

            System.out.println("Loading..."+url);

            ConfigurationManager cm = new ConfigurationManager(url);

	    Recognizer recognizer = (Recognizer) cm.lookup("recognizer");
	    Microphone microphone = (Microphone) cm.lookup("microphone");


            /* allocate the resource necessary for the recognizer */
            recognizer.allocate();

            /* the microphone will keep recording until the program exits */
	    
            if (microphone.startRecording())
            {	
            	System.out.println("Say: (Command | Program| Browser | Bluetooth |  Device Manager |Power Options |Cal | Control | Player |task manager | Windows Security Center)");
            	System.out.println("Say: ( open word | open phot oshop|open Access|start Excel|start nero |start fire wall| open Pad |open Paint)");
            while (true) 
            {
            	
            	
		    System.out.println("Start speaking. Press Ctrl-C to quit.\n");

                    /*
                     * This method will return when the end of speech
                     * is reached. Note that the endpointer will determine
                     * the end of speech.
                     */ 
                    
               Voice voice;
       
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice(VOICENAME);
        voice.allocate();
		  voice.setPitchRange(0);
                voice.setRate(180);
                voice.setPitch(150);
                
		    Result result = recognizer.recognize();
		    if (result != null)
		    {
		    	
		    		System.out.println("Enter your choise"+ "\n");
			 resultText = result.getBestFinalResultNoFiller();
			System.out.println("You said: " + resultText + "\n");
			
			if(resultText.equalsIgnoreCase("command"))
 			{
 				try{
 				Process p;
 				//resultText="";
 				voice.speak("Command prompt Loading sir");
                                p = Runtime.getRuntime().exec("cmd /c start cmd");
 				//System.out.println("You said");
 				
 				 //resultText = result.getBestFinalResultNoFiller();
 				//System.out.println("You said: " + resultText + "\n");
 				
 				}catch(Exception er)
 				{}
 			}if (resultText.equalsIgnoreCase("close command"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start taskkill /im cmd.exe /f");
                        
 		        }catch(Exception ae){}
 		    }
 			if (resultText.equalsIgnoreCase("Power Options"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c powercfg.cpl");
 		     voice.speak("Power option is there for you");
 		        }catch(Exception ae){}
 		    }
 			if (resultText.equalsIgnoreCase("Blue tooth"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c fsquirt");
                        voice.speak("Bluetooth is ready, file tranfer can be intiated");
 		        }catch(Exception ae){}
 		    }
 			if (resultText.equalsIgnoreCase("start photo shop"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start photoshop");
 		     
 		        }catch(Exception ae){}
 		    }
 			if (resultText.equalsIgnoreCase("calculator"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start calc");
 		     voice.speak("Your calculator is ready, start your calculation");
 		        }catch(Exception ae){}
 		    }
 			if (resultText.equalsIgnoreCase("Windows Security Center"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c wscui.cpl");
 		     voice.speak("Windows security is there for you");
 		        }catch(Exception ae){}
 		    }
 			else if (resultText.equalsIgnoreCase("Player"))
 		    {
 		        try{
 		        Process p;
 		    	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start wmplayer");
                        voice.speak("Player is initiated");
 		        }catch(Exception ae){}
 		    }
 			else  if (resultText.equalsIgnoreCase("Program"))
 		    {
 		        try{
 		        Process p;
 		    	//resultText="";
                        voice.speak("Loading your programs");
 		        p = Runtime.getRuntime().exec("cmd /c start appwiz.cpl");
 		        }catch(Exception ae){}
 		    }
 			 else if (resultText.equalsIgnoreCase("Control"))
 			    {
 			        try{
 			        Process p;
 			    //	resultText="";
 			        p = Runtime.getRuntime().exec("cmd /c control");
                                voice.speak("Get the system control");
 			        }catch(Exception ae){}
 			    }
 			else if(resultText.equalsIgnoreCase("open paint"))
 			{	 try{
 				        Process p;
 				    	//resultText="";
 				        p = Runtime.getRuntime().exec("cmd /c start mspaint");
 				       // System.out.println("inside");
                                        voice.speak("Your canvas is online, start painting");
 				        }catch(Exception ae){}
 			}
 			else if(resultText.equalsIgnoreCase("close paint"))
 			{	 try{
 		        Process p;
 		    	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start taskkill /im mspaint.exe /f");
 		       // System.out.println("inside");
                        voice.speak("closing paint");
 		        }catch(Exception ae){}
 			}
 			else if(resultText.equalsIgnoreCase("close calculator"))
 			{	 try{
 		        Process p;
 		    	//resultText="";
                        voice.speak("killing calculator");
 		        p = Runtime.getRuntime().exec("cmd /c start taskkill /im calc.exe /f");
 		       // System.out.println("inside");
 		        }catch(Exception ae){}
 	}
 			else if (resultText.equalsIgnoreCase("Browser"))
 		    {
 		        try{
 		        Process p;//	resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start chrome.exe");
 		       // System.out.println("inside");
                        voice.speak("your browser is online.. start surfing");
 		        }catch(Exception ae){}
 		     }else if (resultText.equalsIgnoreCase("close Browser"))
 			    {
 			        try{
 			        Process p;//	resultText="";
 			        p = Runtime.getRuntime().exec("cmd /c start taskkill /im chrome.exe /f");
 			       // System.out.println("inside");
                                voice.speak("You have gone offline");
 			        }catch(Exception ae){}
 			     }
 			
 			else if(resultText.equalsIgnoreCase("task manager"))
 				{	 try{
 			        Process p;
 			    	//resultText="";
 			        p = Runtime.getRuntime().exec("cmd /c start taskmgr.exe");
 			       // System.out.println("inside");
                                voice.speak("task manager is ready");
 			        }catch(Exception ae){}
 				}
 			else if(resultText.equalsIgnoreCase("Adobe"))
 			{	 try{
 		        Process p;
 		    	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start acrord32.exe");
 		       // System.out.println("inside");
 		        }catch(Exception ae){}
 			}
 			else if(resultText.equalsIgnoreCase("site face book"))
 			{	 try{
 		        Process p;
 		    	//resultText="";
                        voice.speak("you are online on face book");
 		        p = Runtime.getRuntime().exec("cmd /c start chrome www.facebook.com");
 		       // System.out.println("inside");
 		        }catch(Exception ae){}
 			}
 			else if(resultText.equalsIgnoreCase("site go girl"))
 			{	 try{
 		        Process p;
 		    	//resultText="";
                        voice.speak("search engiene is online");
 		        p = Runtime.getRuntime().exec("cmd /c start chrome www.google.com");
 		       // System.out.println("inside");
 		        }catch(Exception ae){}
 			}
 			else if(resultText.equalsIgnoreCase("site mail"))
 			{	 try{
 		        Process p;
 		    	//resultText="";
                        voice.speak("you are on line on g mail");
 		        p = Runtime.getRuntime().exec("cmd /c start chrome https://mail.google.com");
 		       // System.out.println("inside");
 		        }catch(Exception ae){}
 			}
 		     else if(resultText.equalsIgnoreCase("close task manager"))
 				{	 try{
 			        Process p;
 			    	//resultText="";
 			        p = Runtime.getRuntime().exec("cmd /c start taskkill /im taskmgr.exe /f");
 			       // System.out.println("inside");
                                voice.speak("shutting task manager");
 			        }catch(Exception ae){}
 		}
 			else if (resultText.equalsIgnoreCase("open pad"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start notepad");
                        voice.speak("Notepad is there for you");
 		       // System.out.println("inside");
 		        }catch(Exception ae){}
 		     }
 			else if (resultText.equalsIgnoreCase("close pad"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start taskkill /im notepad.exe /f");
                           voice.speak("closing notepad"); 
                        // System.out.println("inside");
 		        }catch(Exception ae){}
 		     }
 			else if (resultText.equalsIgnoreCase("open word"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start winword");
 		       // System.out.println("inside");
                        voice.speak("M S word Loading sir");
 		        }catch(Exception ae){}
 		     }
 			else if (resultText.equalsIgnoreCase("close word"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start taskkill /im winword.exe /f");
 		       // System.out.println("inside");
                        voice.speak("wprd closed");
 		        }catch(Exception ae){}
 		     }
 			else if (resultText.equalsIgnoreCase("start word pad"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c  write");
 		       // System.out.println("inside");
                        voice.speak("word pad is there for you");
 		        }catch(Exception ae){}
 		     }
 			else if (resultText.equalsIgnoreCase("stop word pad"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c  start taskkill /im wordpad.exe /f");
 		       // System.out.println("inside");
                        voice.speak("closing word pad");
 		        }catch(Exception ae){}
 		     }
 			
 			else if (resultText.equalsIgnoreCase("start Excel"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start excel");
 		       // System.out.println("inside");
                        voice.speak("Excel is Loading sir");
 		        }catch(Exception ae){}
 		     }else if (resultText.equalsIgnoreCase("stop Excel"))
 			    {
 			        try{
 			        Process p;	//resultText="";
 			        p = Runtime.getRuntime().exec("cmd /c start taskkill /im excel.exe /f");
 			       // System.out.println("inside");
                                voice.speak("M S Excel closed");
 			        }catch(Exception ae){}
 			     }
 			else if (resultText.equalsIgnoreCase("start firewall"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start firewall.cpl");
 		       // System.out.println("inside");
                        voice.speak("firewall is ready to defend you");
 		        }catch(Exception ae){}
 		     }
 			else if (resultText.equalsIgnoreCase("close fire wall"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        String status = "status eq Windows Firewall";
 		        p = Runtime.getRuntime().exec("cmd /c taskkill /f /fi " +status );
 		       // System.out.println("inside");
                        voice.speak("closing firewal");
 		        }catch(Exception ae){}
 		     }
 			else if (resultText.equalsIgnoreCase("start nero"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start nero");
 		       // System.out.println("inside");
 		        }catch(Exception ae){}
 		     }
 			else if (resultText.equalsIgnoreCase("open Access"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start msaccess");
 		       // System.out.println("inside");
                        voice.speak("M S Access Loading sir");
 		        }catch(Exception ae){}
 		     }
 			else if (resultText.equalsIgnoreCase("close access"))
 		    {
 		        try{
 		        Process p;	//resultText="";
 		        p = Runtime.getRuntime().exec("cmd /c start taskkill /im msaccess.exe /f");
 		       // System.out.println("inside");
                        voice.speak("access closed");
 		        }catch(Exception ae){}
 		     }
 			else if(resultText.equalsIgnoreCase("speech recognize complete"))
 		    {
 				try{
 					System.out.println("Thanks for using !");
 					recognizer.deallocate();
 					System.exit(0);}
 				catch(Exception ecomp ){}
 		    }
 			else if(resultText.equalsIgnoreCase("speech recognize start"))
 		    {
 				try{
 					
 					recognizer.notify();
 					System.out.println("Hello again :-) ");
 					System.exit(0);}
 				catch(Exception estart ){}
 		    }
 			else if(resultText.equalsIgnoreCase("stop recognize") || resultText.equalsIgnoreCase("exit"))
 		    {
 				try{
 					 voice.speak("Thank you !! nice  working with you.  I am shutting myself down");
 					//recognizer.wait();
 					System.out.println("See you later!");
 					System.exit(0);}
 				catch(Exception estop ){}
 		    }
 			else if (resultText.equalsIgnoreCase("Device Manager"))
 			    {
 			        try{
 			        Process p;	//resultText="";
 			        p = Runtime.getRuntime().exec("cmd /c start devmgmt.msc");
 			       // System.out.println("inside");
 			        }catch(Exception ae){}
 			     }
                        else if(resultText.equalsIgnoreCase("Open Calculator"))
                        {
                            	 try{
 		        Process p;
 		    	//resultText="";voice.speak("Command prompt Loading sir");
                        voice.speak("calculator is loaded, start calculation");
 		        p = Runtime.getRuntime().exec("cmd /c calc.exe ");
 		       // System.out.println("inside");
 		        }catch(Exception ae){}
                        }
                        else
                           if(resultText.equalsIgnoreCase("exit"))
                           {
                               voice.speak("Thank you !! nice  working with you");
                                        try {
                                            Thread.sleep(2000);
                                        } catch (InterruptedException ex) {
                                            Logger.getLogger(HelloWorld.class.getName()).log(Level.SEVERE, null, ex);
                                        }
                               System.exit(0);
                           }
 		
 		    }
		    
	    	else
		   	{
						System.out.println("I can't hear what you said.\n");
		    }
       }
	   } 
        else
        {
        	System.out.println("Cannot start microphone.");
        	recognizer.deallocate();
               
        	System.exit(1);
	    }
            
        } catch (IOException e) {
            System.err.println("Problem when loading HelloWorld: " + e);
            e.printStackTrace();
        } catch (PropertyException e) {
            System.err.println("Problem configuring HelloWorld: " + e);
            e.printStackTrace();
        } catch (InstantiationException e) {
            System.err.println("Problem creating HelloWorld: " + e);
            e.printStackTrace();
        }
        
    }
    
    
    
    
    //**********************speech part over***********************************
    
    
    
    
    
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
